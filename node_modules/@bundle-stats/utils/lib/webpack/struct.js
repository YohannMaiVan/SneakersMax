"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebpackSourceStruct = exports.WebpackSourceChunkStruct = exports.WebpackSourceModuleChunk = exports.WebpackSourceAssetHiddenStruct = exports.WebpackSourceAssetStruct = void 0;

var _superstruct = require("superstruct");

const struct = (0, _superstruct.superstruct)({
  types: {
    notEmptyArray: value => (value === null || value === void 0 ? void 0 : value.length) > 0
  }
});
const WebpackSourceAssetStruct = struct.interface({
  name: 'string',
  size: 'number'
});
exports.WebpackSourceAssetStruct = WebpackSourceAssetStruct;
const WebpackSourceAssetHiddenStruct = struct.interface({
  type: 'string',
  filteredChildren: 'number',
  size: 'number'
});
exports.WebpackSourceAssetHiddenStruct = WebpackSourceAssetHiddenStruct;
const WebpackSourceModuleChunk = struct.interface({
  name: 'string',
  size: 'number',
  chunks: [struct.union(['number', 'string'])]
});
exports.WebpackSourceModuleChunk = WebpackSourceModuleChunk;
const WebpackSourceChunkStruct = struct.interface({
  id: struct.union(['number', 'string', 'null']),
  entry: 'boolean',
  initial: 'boolean',
  names: ['string'],
  files: ['string']
});
exports.WebpackSourceChunkStruct = WebpackSourceChunkStruct;
const WebpackSourceStruct = struct.interface({
  hash: struct.optional('string'),
  builtAt: struct.optional('number'),
  assets: struct.intersection([[struct.union([WebpackSourceAssetStruct, WebpackSourceAssetHiddenStruct])], 'notEmptyArray']),
  modules: struct.optional([WebpackSourceModuleChunk]),
  chunks: struct.optional([WebpackSourceChunkStruct])
});
exports.WebpackSourceStruct = WebpackSourceStruct;