"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetricsTableSearch = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _icon = require("../../ui/icon");

var _metricsTableSearchModule = _interopRequireDefault(require("./metrics-table-search.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var MetricsTableSearch = function MetricsTableSearch(props) {
  var className = props.className,
      placeholder = props.placeholder,
      search = props.search,
      updateSearch = props.updateSearch;
  var rootClassname = (0, _classnames["default"])(_metricsTableSearchModule["default"].root, className);
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: rootClassname
  }, /*#__PURE__*/_react["default"].createElement("input", {
    className: (0, _classnames["default"])('ui-input', 'ui-input--small', _metricsTableSearchModule["default"].input),
    placeholder: placeholder,
    onChange: function onChange(event) {
      return updateSearch(event.target.value);
    },
    value: search
  }), search && /*#__PURE__*/_react["default"].createElement("button", {
    className: (0, _classnames["default"])('ui-button', 'ui-button--clear', _metricsTableSearchModule["default"].cancelButton),
    type: "button",
    onClick: function onClick() {
      return updateSearch('');
    }
  }, /*#__PURE__*/_react["default"].createElement(_icon.Icon, {
    className: _metricsTableSearchModule["default"].cancelButtonIcon,
    glyph: "cancel"
  })));
};

exports.MetricsTableSearch = MetricsTableSearch;
MetricsTableSearch.propTypes = {
  className: _propTypes["default"].string,
  placeholder: _propTypes["default"].string,
  search: _propTypes["default"].string.isRequired,
  updateSearch: _propTypes["default"].func.isRequired
};
MetricsTableSearch.defaultProps = {
  className: '',
  placeholder: ''
};