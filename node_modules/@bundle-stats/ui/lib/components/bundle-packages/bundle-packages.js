"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BundlePackages = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("@bundle-stats/utils");

var _config = _interopRequireDefault(require("../../config.json"));

var _i18n = _interopRequireDefault(require("../../i18n"));

var _stack = require("../../layout/stack");

var _flexStack = require("../../layout/flex-stack");

var _emptySet = require("../../ui/empty-set");

var _filtersDropdown = require("../../ui/filters-dropdown");

var _popover = require("../../ui/popover");

var _sortDropdown = require("../../ui/sort-dropdown");

var _toolbar = require("../../ui/toolbar");

var _componentLink = require("../component-link");

var _metricsTable = require("../metrics-table");

var _metricsTableSearch = require("../metrics-table-search");

var _bundlePackagesModule = _interopRequireDefault(require("./bundle-packages.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var getPopoverContent = function getPopoverContent(_ref) {
  var packageName = _ref.packageName,
      packagePath = _ref.packagePath,
      duplicate = _ref.duplicate,
      CustomComponentLink = _ref.CustomComponentLink;
  var normalizedPackagePath = "node_modules/".concat(packagePath.split(_utils.PACKAGES_SEPARATOR).join('/node_modules/'));
  return /*#__PURE__*/_react["default"].createElement(_stack.Stack, {
    space: "xxsmall",
    className: _bundlePackagesModule["default"].packagePopover
  }, /*#__PURE__*/_react["default"].createElement("h4", {
    className: _bundlePackagesModule["default"].packagePopoverTitle
  }, packageName), /*#__PURE__*/_react["default"].createElement("ul", {
    className: _bundlePackagesModule["default"].packagePopoverList
  }, /*#__PURE__*/_react["default"].createElement("li", {
    className: _bundlePackagesModule["default"].packagePopoverItem
  }, /*#__PURE__*/_react["default"].createElement("a", {
    href: "https://www.npmjs.com/package/".concat(packageName),
    target: "_blank",
    rel: "noreferrer"
  }, "npmjs.com")), /*#__PURE__*/_react["default"].createElement("li", {
    className: _bundlePackagesModule["default"].packagePopoverItem
  }, /*#__PURE__*/_react["default"].createElement("a", {
    href: "https://bundlephobia.com/result?p=".concat(packageName),
    target: "_blank",
    rel: "noreferrer"
  }, "bundlephobia.com"))), /*#__PURE__*/_react["default"].createElement(_stack.Stack, {
    space: "xxxsmall",
    className: _bundlePackagesModule["default"].packagePopover.actions
  }, duplicate && /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(CustomComponentLink, (0, _utils.getBundlePackagesByNameComponentLink)(packageName), "View all duplicates")), /*#__PURE__*/_react["default"].createElement(CustomComponentLink, (0, _utils.getBundleModulesBySearch)(normalizedPackagePath), "View all modules")));
};

var Title = function Title() {
  return /*#__PURE__*/_react["default"].createElement(_flexStack.FlexStack, {
    space: "xxxsmall",
    className: _bundlePackagesModule["default"].title
  }, /*#__PURE__*/_react["default"].createElement("span", null, _i18n["default"].PACKAGES), /*#__PURE__*/_react["default"].createElement(_popover.Popover, {
    icon: "help"
  }, /*#__PURE__*/_react["default"].createElement(_stack.Stack, {
    space: "xxxsmall"
  }, /*#__PURE__*/_react["default"].createElement("p", null, _i18n["default"].PACKAGES_INFO), /*#__PURE__*/_react["default"].createElement("p", null, /*#__PURE__*/_react["default"].createElement("a", {
    href: _config["default"].documentation.packages,
    target: "_blank",
    rel: "noreferrer"
  }, _i18n["default"].READ_MORE)))));
};

var BundlePackages = function BundlePackages(props) {
  var className = props.className,
      jobs = props.jobs,
      items = props.items,
      updateFilters = props.updateFilters,
      resetFilters = props.resetFilters,
      totalRowCount = props.totalRowCount,
      filters = props.filters,
      sortItems = props.sortItems,
      sort = props.sort,
      updateSort = props.updateSort,
      search = props.search,
      updateSearch = props.updateSearch,
      hasActiveFilters = props.hasActiveFilters,
      CustomComponentLink = props.customComponentLink;

  var clear = function clear() {
    resetFilters();
    updateSearch('');
  };

  var emptyMessage = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react["default"].createElement(_emptySet.EmptySet, {
      resources: "packages",
      filtered: totalRowCount !== 0,
      resetFilters: clear
    });
  }, []);

  var renderRowHeader = function renderRowHeader(item) {
    var packageNames = item.label.split(_utils.PACKAGES_SEPARATOR);
    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, packageNames.map(function (packageName, index) {
      // Render duplicate flag only for the last entry
      var duplicateFlag = index === packageNames.length - 1 && item.duplicate && /*#__PURE__*/_react["default"].createElement("span", {
        className: _bundlePackagesModule["default"].duplicate,
        title: "Duplicate package"
      }, "D");

      return /*#__PURE__*/_react["default"].createElement(_popover.Popover, {
        className: _bundlePackagesModule["default"].packageName,
        icon: duplicateFlag,
        label: packageName
      }, getPopoverContent({
        packageName: packageName,
        packagePath: item.label,
        duplicate: item.duplicate,
        CustomComponentLink: CustomComponentLink
      }));
    }));
  };

  return /*#__PURE__*/_react["default"].createElement("section", {
    className: (0, _classnames["default"])(_bundlePackagesModule["default"].root, className)
  }, /*#__PURE__*/_react["default"].createElement(_toolbar.Toolbar, {
    className: _bundlePackagesModule["default"].toolbar,
    renderActions: function renderActions(_ref2) {
      var _ref3;

      var actionClassName = _ref2.actionClassName;
      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("div", {
        className: actionClassName
      }, /*#__PURE__*/_react["default"].createElement(_sortDropdown.SortDropdown, _extends({
        items: sortItems
      }, sort, {
        onChange: updateSort
      }))), /*#__PURE__*/_react["default"].createElement("div", {
        className: actionClassName
      }, /*#__PURE__*/_react["default"].createElement(_filtersDropdown.FiltersDropdown, {
        filters: (_ref3 = {}, _defineProperty(_ref3, _utils.PACKAGE_FILTERS.CHANGED, {
          label: 'Changed',
          defaultValue: filters[_utils.PACKAGE_FILTERS.CHANGED],
          disabled: jobs.length <= 1
        }), _defineProperty(_ref3, _utils.PACKAGE_FILTERS.DUPLICATE, {
          label: 'Duplicate',
          defaultValue: filters[_utils.PACKAGE_FILTERS.DUPLICATE]
        }), _ref3),
        label: "Filters (".concat(items.length, "/").concat(totalRowCount, ")"),
        onChange: updateFilters,
        hasActiveFilters: hasActiveFilters
      })));
    }
  }, /*#__PURE__*/_react["default"].createElement(_metricsTableSearch.MetricsTableSearch, {
    className: _bundlePackagesModule["default"].toolbarSearch,
    placeholder: "Search by name",
    search: search,
    updateSearch: updateSearch
  })), /*#__PURE__*/_react["default"].createElement("main", null, /*#__PURE__*/_react["default"].createElement(_metricsTable.MetricsTable, {
    runs: jobs,
    items: items,
    emptyMessage: emptyMessage,
    renderRowHeader: renderRowHeader,
    showHeaderSum: true,
    title: /*#__PURE__*/_react["default"].createElement(Title, null)
  })));
};

exports.BundlePackages = BundlePackages;
BundlePackages.defaultProps = {
  className: '',
  totalRowCount: 0,
  hasActiveFilters: false,
  customComponentLink: _componentLink.ComponentLink
};
BundlePackages.propTypes = {
  className: _propTypes["default"].string,
  jobs: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    internalBuildNumber: _propTypes["default"].number
  })).isRequired,
  items: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    key: _propTypes["default"].string,
    label: _propTypes["default"].string,
    runs: _propTypes["default"].arrayOf(_propTypes["default"].shape({
      displayValue: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
      displayDelta: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
    }))
  })).isRequired,
  updateFilters: _propTypes["default"].func.isRequired,
  resetFilters: _propTypes["default"].func.isRequired,
  totalRowCount: _propTypes["default"].number,
  filters: _propTypes["default"].shape({
    changed: _propTypes["default"].bool
  }).isRequired,
  hasActiveFilters: _propTypes["default"].bool,
  sortItems: _propTypes["default"].shape(_defineProperty({}, _propTypes["default"].string, _propTypes["default"].shape({
    label: _propTypes["default"].string,
    defaultDirection: _propTypes["default"].bool
  }))).isRequired,
  sort: _propTypes["default"].shape({
    sortBy: _propTypes["default"].string,
    direction: _propTypes["default"].string
  }).isRequired,
  updateSort: _propTypes["default"].func.isRequired,
  search: _propTypes["default"].string.isRequired,
  updateSearch: _propTypes["default"].func.isRequired,
  customComponentLink: _propTypes["default"].elementType
};