"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dropdown = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _icon = require("../icon");

var _dropdownModule = _interopRequireDefault(require("./dropdown.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var ALIGN_LEFT = 'left';
var ALIGN_RIGHT = 'right';

var Dropdown = function Dropdown(props) {
  var className = props.className,
      label = props.label,
      glyph = props.glyph,
      activeLabel = props.activeLabel,
      open = props.open,
      dropdownToggle = props.dropdownToggle,
      align = props.align,
      children = props.children;
  var rootClassName = (0, _classnames["default"])(_dropdownModule["default"].root, open && _dropdownModule["default"].open, activeLabel && _dropdownModule["default"].activeLabel, _dropdownModule["default"][align], className);
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: rootClassName
  }, /*#__PURE__*/_react["default"].createElement("button", {
    className: _dropdownModule["default"].label,
    type: "button",
    onClick: dropdownToggle
  }, glyph && /*#__PURE__*/_react["default"].createElement(_icon.Icon, {
    className: _dropdownModule["default"].labelIcon,
    glyph: glyph
  }), label), /*#__PURE__*/_react["default"].createElement("div", {
    className: _dropdownModule["default"].dropdown
  }, typeof children === 'function' ? children({
    dropdownToggle: dropdownToggle
  }) : children));
};

exports.Dropdown = Dropdown;
Dropdown.defaultProps = {
  className: '',
  label: '',
  glyph: null,
  align: ALIGN_LEFT,
  activeLabel: false
};
Dropdown.propTypes = {
  /** Adopted child class name */
  className: _propTypes["default"].string,

  /** Button label */
  label: _propTypes["default"].string,

  /** Icon glyph */
  glyph: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** Dropdown open state */
  open: _propTypes["default"].bool.isRequired,

  /** Align modifier */
  align: _propTypes["default"].oneOf([ALIGN_LEFT, ALIGN_RIGHT]),

  /** Active label flag */
  activeLabel: _propTypes["default"].bool,

  /** Content */
  children: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element, _propTypes["default"].func]).isRequired,

  /** Dropdown toggle handler */
  dropdownToggle: _propTypes["default"].func.isRequired
};