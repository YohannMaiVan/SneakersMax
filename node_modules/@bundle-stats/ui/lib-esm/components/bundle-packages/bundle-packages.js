var _PropTypes$shape;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useMemo } from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { PACKAGE_FILTERS, PACKAGES_SEPARATOR, getBundleModulesBySearch, getBundlePackagesByNameComponentLink } from '@bundle-stats/utils';
import config from '../../config.json';
import I18N from '../../i18n';
import { Stack } from '../../layout/stack';
import { FlexStack } from '../../layout/flex-stack';
import { EmptySet } from '../../ui/empty-set';
import { FiltersDropdown } from '../../ui/filters-dropdown';
import { Popover } from '../../ui/popover';
import { SortDropdown } from '../../ui/sort-dropdown';
import { Toolbar } from '../../ui/toolbar';
import { ComponentLink } from '../component-link';
import { MetricsTable } from '../metrics-table';
import { MetricsTableSearch } from '../metrics-table-search';
import css from './bundle-packages.module.css';

var getPopoverContent = function getPopoverContent(_ref) {
  var packageName = _ref.packageName,
      packagePath = _ref.packagePath,
      duplicate = _ref.duplicate,
      CustomComponentLink = _ref.CustomComponentLink;
  var normalizedPackagePath = "node_modules/" + packagePath.split(PACKAGES_SEPARATOR).join('/node_modules/');
  return /*#__PURE__*/React.createElement(Stack, {
    space: "xxsmall",
    className: css.packagePopover
  }, /*#__PURE__*/React.createElement("h4", {
    className: css.packagePopoverTitle
  }, packageName), /*#__PURE__*/React.createElement("ul", {
    className: css.packagePopoverList
  }, /*#__PURE__*/React.createElement("li", {
    className: css.packagePopoverItem
  }, /*#__PURE__*/React.createElement("a", {
    href: "https://www.npmjs.com/package/" + packageName,
    target: "_blank",
    rel: "noreferrer"
  }, "npmjs.com")), /*#__PURE__*/React.createElement("li", {
    className: css.packagePopoverItem
  }, /*#__PURE__*/React.createElement("a", {
    href: "https://bundlephobia.com/result?p=" + packageName,
    target: "_blank",
    rel: "noreferrer"
  }, "bundlephobia.com"))), /*#__PURE__*/React.createElement(Stack, {
    space: "xxxsmall",
    className: css.packagePopover.actions
  }, duplicate && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CustomComponentLink, getBundlePackagesByNameComponentLink(packageName), "View all duplicates")), /*#__PURE__*/React.createElement(CustomComponentLink, getBundleModulesBySearch(normalizedPackagePath), "View all modules")));
};

var Title = function Title() {
  return /*#__PURE__*/React.createElement(FlexStack, {
    space: "xxxsmall",
    className: css.title
  }, /*#__PURE__*/React.createElement("span", null, I18N.PACKAGES), /*#__PURE__*/React.createElement(Popover, {
    icon: "help"
  }, /*#__PURE__*/React.createElement(Stack, {
    space: "xxxsmall"
  }, /*#__PURE__*/React.createElement("p", null, I18N.PACKAGES_INFO), /*#__PURE__*/React.createElement("p", null, /*#__PURE__*/React.createElement("a", {
    href: config.documentation.packages,
    target: "_blank",
    rel: "noreferrer"
  }, I18N.READ_MORE)))));
};

export var BundlePackages = function BundlePackages(props) {
  var className = props.className,
      jobs = props.jobs,
      items = props.items,
      updateFilters = props.updateFilters,
      resetFilters = props.resetFilters,
      totalRowCount = props.totalRowCount,
      filters = props.filters,
      sortItems = props.sortItems,
      sort = props.sort,
      updateSort = props.updateSort,
      search = props.search,
      updateSearch = props.updateSearch,
      hasActiveFilters = props.hasActiveFilters,
      CustomComponentLink = props.customComponentLink;

  var clear = function clear() {
    resetFilters();
    updateSearch('');
  };

  var emptyMessage = useMemo(function () {
    return /*#__PURE__*/React.createElement(EmptySet, {
      resources: "packages",
      filtered: totalRowCount !== 0,
      resetFilters: clear
    });
  }, []);

  var renderRowHeader = function renderRowHeader(item) {
    var packageNames = item.label.split(PACKAGES_SEPARATOR);
    return /*#__PURE__*/React.createElement(React.Fragment, null, packageNames.map(function (packageName, index) {
      // Render duplicate flag only for the last entry
      var duplicateFlag = index === packageNames.length - 1 && item.duplicate && /*#__PURE__*/React.createElement("span", {
        className: css.duplicate,
        title: "Duplicate package"
      }, "D");
      return /*#__PURE__*/React.createElement(Popover, {
        className: css.packageName,
        icon: duplicateFlag,
        label: packageName
      }, getPopoverContent({
        packageName: packageName,
        packagePath: item.label,
        duplicate: item.duplicate,
        CustomComponentLink: CustomComponentLink
      }));
    }));
  };

  return /*#__PURE__*/React.createElement("section", {
    className: cx(css.root, className)
  }, /*#__PURE__*/React.createElement(Toolbar, {
    className: css.toolbar,
    renderActions: function renderActions(_ref2) {
      var _ref3;

      var actionClassName = _ref2.actionClassName;
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
        className: actionClassName
      }, /*#__PURE__*/React.createElement(SortDropdown, _extends({
        items: sortItems
      }, sort, {
        onChange: updateSort
      }))), /*#__PURE__*/React.createElement("div", {
        className: actionClassName
      }, /*#__PURE__*/React.createElement(FiltersDropdown, {
        filters: (_ref3 = {}, _ref3[PACKAGE_FILTERS.CHANGED] = {
          label: 'Changed',
          defaultValue: filters[PACKAGE_FILTERS.CHANGED],
          disabled: jobs.length <= 1
        }, _ref3[PACKAGE_FILTERS.DUPLICATE] = {
          label: 'Duplicate',
          defaultValue: filters[PACKAGE_FILTERS.DUPLICATE]
        }, _ref3),
        label: "Filters (" + items.length + "/" + totalRowCount + ")",
        onChange: updateFilters,
        hasActiveFilters: hasActiveFilters
      })));
    }
  }, /*#__PURE__*/React.createElement(MetricsTableSearch, {
    className: css.toolbarSearch,
    placeholder: "Search by name",
    search: search,
    updateSearch: updateSearch
  })), /*#__PURE__*/React.createElement("main", null, /*#__PURE__*/React.createElement(MetricsTable, {
    runs: jobs,
    items: items,
    emptyMessage: emptyMessage,
    renderRowHeader: renderRowHeader,
    showHeaderSum: true,
    title: /*#__PURE__*/React.createElement(Title, null)
  })));
};
BundlePackages.defaultProps = {
  className: '',
  totalRowCount: 0,
  hasActiveFilters: false,
  customComponentLink: ComponentLink
};
BundlePackages.propTypes = {
  className: PropTypes.string,
  jobs: PropTypes.arrayOf(PropTypes.shape({
    internalBuildNumber: PropTypes.number
  })).isRequired,
  items: PropTypes.arrayOf(PropTypes.shape({
    key: PropTypes.string,
    label: PropTypes.string,
    runs: PropTypes.arrayOf(PropTypes.shape({
      displayValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
      displayDelta: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
    }))
  })).isRequired,
  updateFilters: PropTypes.func.isRequired,
  resetFilters: PropTypes.func.isRequired,
  totalRowCount: PropTypes.number,
  filters: PropTypes.shape({
    changed: PropTypes.bool
  }).isRequired,
  hasActiveFilters: PropTypes.bool,
  sortItems: PropTypes.shape((_PropTypes$shape = {}, _PropTypes$shape[PropTypes.string] = PropTypes.shape({
    label: PropTypes.string,
    defaultDirection: PropTypes.bool
  }), _PropTypes$shape)).isRequired,
  sort: PropTypes.shape({
    sortBy: PropTypes.string,
    direction: PropTypes.string
  }).isRequired,
  updateSort: PropTypes.func.isRequired,
  search: PropTypes.string.isRequired,
  updateSearch: PropTypes.func.isRequired,
  customComponentLink: PropTypes.elementType
};