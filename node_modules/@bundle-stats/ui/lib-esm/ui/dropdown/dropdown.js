import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { Icon } from '../icon';
import css from './dropdown.module.css';
var ALIGN_LEFT = 'left';
var ALIGN_RIGHT = 'right';
export var Dropdown = function Dropdown(props) {
  var className = props.className,
      label = props.label,
      glyph = props.glyph,
      activeLabel = props.activeLabel,
      open = props.open,
      dropdownToggle = props.dropdownToggle,
      align = props.align,
      children = props.children;
  var rootClassName = cx(css.root, open && css.open, activeLabel && css.activeLabel, css[align], className);
  return /*#__PURE__*/React.createElement("div", {
    className: rootClassName
  }, /*#__PURE__*/React.createElement("button", {
    className: css.label,
    type: "button",
    onClick: dropdownToggle
  }, glyph && /*#__PURE__*/React.createElement(Icon, {
    className: css.labelIcon,
    glyph: glyph
  }), label), /*#__PURE__*/React.createElement("div", {
    className: css.dropdown
  }, typeof children === 'function' ? children({
    dropdownToggle: dropdownToggle
  }) : children));
};
Dropdown.defaultProps = {
  className: '',
  label: '',
  glyph: null,
  align: ALIGN_LEFT,
  activeLabel: false
};
Dropdown.propTypes = {
  /** Adopted child class name */
  className: PropTypes.string,

  /** Button label */
  label: PropTypes.string,

  /** Icon glyph */
  glyph: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),

  /** Dropdown open state */
  open: PropTypes.bool.isRequired,

  /** Align modifier */
  align: PropTypes.oneOf([ALIGN_LEFT, ALIGN_RIGHT]),

  /** Active label flag */
  activeLabel: PropTypes.bool,

  /** Content */
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.func]).isRequired,

  /** Dropdown toggle handler */
  dropdownToggle: PropTypes.func.isRequired
};